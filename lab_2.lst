Microsoft (R) Macro Assembler Version 6.14.8444		    12/29/21 14:40:28
lab_2.asm						     Page 1 - 1


				;Лабораторная работа №2
				;Выполнил ст. гр. УИС-311 Баклашкин Алексей
				;Вариант 12
				;    -43+6X, X<=40
				;Y=  10-200/X, 40<X<=150
				;    X+99, X>150
				;=========================================
				.486
				.model flat, stdcall
				option casemap: none
				.stack 100h
				;=========================================
				include <\masm32\include\kernel32.inc>
			      C ; --------------------------------------------------------------------------------------------------
			      C ;                          kernel32.inc Copyright The MASM32 SDK 1998-2010
			      C ; --------------------------------------------------------------------------------------------------
			      C 
			      C IFNDEF KERNEL32_INC
 = 1			      C KERNEL32_INC equ <1>
			      C 
			      C ActivateActCtx PROTO STDCALL :DWORD,:DWORD
			      C 
			      C AddAtomA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = AddAtomA		      C   AddAtom equ <AddAtomA>
			      C ENDIF
			      C 
			      C AddAtomW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C AddLocalAlternateComputerNameA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = AddLocalAlternateCompute   C   AddLocalAlternateComputerName equ <AddLocalAlternateComputerNameA>
   rNameA
			      C ENDIF
			      C 
			      C AddLocalAlternateComputerNameW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C AddRefActCtx PROTO STDCALL :DWORD
			      C AddVectoredExceptionHandler PROTO STDCALL :DWORD,:DWORD
			      C AllocConsole PROTO STDCALL
			      C AllocateUserPhysicalPages PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C AreFileApisANSI PROTO STDCALL
			      C AssignProcessToJobObject PROTO STDCALL :DWORD,:DWORD
			      C AttachConsole PROTO STDCALL :DWORD
			      C BackupRead PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C BackupSeek PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C BackupWrite PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C Beep PROTO STDCALL :DWORD,:DWORD
			      C 
			      C BeginUpdateResourceA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = BeginUpdateResourceA	      C   BeginUpdateResource equ <BeginUpdateResourceA>
			      C ENDIF
			      C 
			      C BeginUpdateResourceW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C BindIoCompletionCallback PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C BuildCommDCBA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = BuildCommDCBA	      C   BuildCommDCB equ <BuildCommDCBA>
			      C ENDIF
			      C 
			      C BuildCommDCBAndTimeoutsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = BuildCommDCBAndTimeoutsA   C   BuildCommDCBAndTimeouts equ <BuildCommDCBAndTimeoutsA>
			      C ENDIF
			      C 
			      C BuildCommDCBAndTimeoutsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C BuildCommDCBW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CallNamedPipeA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CallNamedPipeA	      C   CallNamedPipe equ <CallNamedPipeA>
			      C ENDIF
			      C 
			      C CallNamedPipeW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CancelDeviceWakeupRequest PROTO STDCALL :DWORD
			      C CancelIo PROTO STDCALL :DWORD
			      C CancelTimerQueueTimer PROTO STDCALL :DWORD,:DWORD
			      C CancelWaitableTimer PROTO STDCALL :DWORD
			      C ChangeTimerQueueTimer PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C CheckNameLegalDOS8Dot3A PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CheckNameLegalDOS8Dot3A    C   CheckNameLegalDOS8Dot3 equ <CheckNameLegalDOS8Dot3A>
			      C ENDIF
			      C 
			      C CheckNameLegalDOS8Dot3W PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CheckRemoteDebuggerPresent PROTO STDCALL :DWORD,:DWORD
			      C ClearCommBreak PROTO STDCALL :DWORD
			      C ClearCommError PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C CloseHandle PROTO STDCALL :DWORD
			      C 
			      C CommConfigDialogA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CommConfigDialogA	      C   CommConfigDialog equ <CommConfigDialogA>
			      C ENDIF
			      C 
			      C CommConfigDialogW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CompareFileTime PROTO STDCALL :DWORD,:DWORD
			      C 
			      C CompareStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CompareStringA	      C   CompareString equ <CompareStringA>
			      C ENDIF
			      C 
			      C CompareStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ConnectNamedPipe PROTO STDCALL :DWORD,:DWORD
			      C ContinueDebugEvent PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C ConvertDefaultLocale PROTO STDCALL :DWORD
			      C ConvertFiberToThread PROTO STDCALL
			      C ConvertThreadToFiber PROTO STDCALL :DWORD
			      C 
			      C CopyFileA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CopyFileA		      C   CopyFile equ <CopyFileA>
			      C ENDIF
			      C 
			      C CopyFileExA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CopyFileExA		      C   CopyFileEx equ <CopyFileExA>
			      C ENDIF
			      C 
			      C CopyFileExW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CopyFileW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateActCtxA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = CreateActCtxA	      C   CreateActCtx equ <CreateActCtxA>
			      C ENDIF
			      C 
			      C CreateActCtxW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateConsoleScreenBuffer PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C CreateDirectoryA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateDirectoryA	      C   CreateDirectory equ <CreateDirectoryA>
			      C ENDIF
			      C 
			      C CreateDirectoryExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateDirectoryExA	      C   CreateDirectoryEx equ <CreateDirectoryExA>
			      C ENDIF
			      C 
			      C CreateDirectoryExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateDirectoryW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateEventA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateEventA		      C   CreateEvent equ <CreateEventA>
			      C ENDIF
			      C 
			      C CreateEventW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateFiber PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C CreateFiberEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C CreateFileA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateFileA		      C   CreateFile equ <CreateFileA>
			      C ENDIF
			      C 
			      C CreateFileMappingA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateFileMappingA	      C   CreateFileMapping equ <CreateFileMappingA>
			      C ENDIF
			      C 
			      C CreateFileMappingW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateFileW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateHardLinkA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateHardLinkA	      C   CreateHardLink equ <CreateHardLinkA>
			      C ENDIF
			      C 
			      C CreateHardLinkW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateIoCompletionPort PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C CreateJobObjectA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateJobObjectA	      C   CreateJobObject equ <CreateJobObjectA>
			      C ENDIF
			      C 
			      C CreateJobObjectW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateJobSet PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C CreateMailslotA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateMailslotA	      C   CreateMailslot equ <CreateMailslotA>
			      C ENDIF
			      C 
			      C CreateMailslotW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateMemoryResourceNotification PROTO STDCALL :DWORD
			      C 
			      C CreateMutexA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateMutexA		      C   CreateMutex equ <CreateMutexA>
			      C ENDIF
			      C 
			      C CreateMutexW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateNamedPipeA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateNamedPipeA	      C   CreateNamedPipe equ <CreateNamedPipeA>
			      C ENDIF
			      C 
			      C CreateNamedPipeW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreatePipe PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C CreateProcessA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateProcessA	      C   CreateProcess equ <CreateProcessA>
			      C ENDIF
			      C 
			      C CreateProcessInternalWSecure PROTO STDCALL
			      C 
			      C CreateProcessW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateRemoteThread PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C CreateSemaphoreA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateSemaphoreA	      C   CreateSemaphore equ <CreateSemaphoreA>
			      C ENDIF
			      C 
			      C CreateSemaphoreW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C CreateTapePartition PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C CreateThread PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C CreateTimerQueue PROTO STDCALL
			      C CreateTimerQueueTimer PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C CreateToolhelp32Snapshot PROTO STDCALL :DWORD,:DWORD
			      C 
			      C CreateWaitableTimerA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = CreateWaitableTimerA	      C   CreateWaitableTimer equ <CreateWaitableTimerA>
			      C ENDIF
			      C 
			      C CreateWaitableTimerW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C DeactivateActCtx PROTO STDCALL :DWORD,:DWORD
			      C DebugActiveProcess PROTO STDCALL :DWORD
			      C DebugActiveProcessStop PROTO STDCALL :DWORD
			      C DebugBreak PROTO STDCALL
			      C DebugBreakProcess PROTO STDCALL :DWORD
			      C DebugSetProcessKillOnExit PROTO STDCALL :DWORD
			      C DecodePointer PROTO STDCALL :DWORD
			      C DecodeSystemPointer PROTO STDCALL :DWORD
			      C 
			      C DefineDosDeviceA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = DefineDosDeviceA	      C   DefineDosDevice equ <DefineDosDeviceA>
			      C ENDIF
			      C 
			      C DefineDosDeviceW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C DeleteAtom PROTO STDCALL :DWORD
			      C DeleteCriticalSection PROTO STDCALL :DWORD
			      C DeleteFiber PROTO STDCALL :DWORD
			      C 
			      C DeleteFileA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = DeleteFileA		      C   DeleteFile equ <DeleteFileA>
			      C ENDIF
			      C 
			      C DeleteFileW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C DeleteTimerQueue PROTO STDCALL :DWORD
			      C DeleteTimerQueueEx PROTO STDCALL :DWORD,:DWORD
			      C DeleteTimerQueueTimer PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C DeleteVolumeMountPointA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = DeleteVolumeMountPointA    C   DeleteVolumeMountPoint equ <DeleteVolumeMountPointA>
			      C ENDIF
			      C 
			      C DeleteVolumeMountPointW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C DeviceIoControl PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C DisableThreadLibraryCalls PROTO STDCALL :DWORD
			      C DisconnectNamedPipe PROTO STDCALL :DWORD
			      C 
			      C DnsHostnameToComputerNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = DnsHostnameToComputerNam   C   DnsHostnameToComputerName equ <DnsHostnameToComputerNameA>
   eA
			      C ENDIF
			      C 
			      C DnsHostnameToComputerNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C DosDateTimeToFileTime PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C DuplicateHandle PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C EncodePointer PROTO STDCALL :DWORD
			      C EncodeSystemPointer PROTO STDCALL :DWORD
			      C 
			      C EndUpdateResourceA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EndUpdateResourceA	      C   EndUpdateResource equ <EndUpdateResourceA>
			      C ENDIF
			      C 
			      C EndUpdateResourceW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnterCriticalSection PROTO STDCALL :DWORD
			      C 
			      C EnumCalendarInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumCalendarInfoA	      C   EnumCalendarInfo equ <EnumCalendarInfoA>
			      C ENDIF
			      C 
			      C EnumCalendarInfoExA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumCalendarInfoExA	      C   EnumCalendarInfoEx equ <EnumCalendarInfoExA>
			      C ENDIF
			      C 
			      C EnumCalendarInfoExW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumCalendarInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumDateFormatsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumDateFormatsA	      C   EnumDateFormats equ <EnumDateFormatsA>
			      C ENDIF
			      C 
			      C EnumDateFormatsExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumDateFormatsExA	      C   EnumDateFormatsEx equ <EnumDateFormatsExA>
			      C ENDIF
			      C 
			      C EnumDateFormatsExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumDateFormatsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumLanguageGroupLocalesA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumLanguageGroupLocales   C   EnumLanguageGroupLocales equ <EnumLanguageGroupLocalesA>
   A
			      C ENDIF
			      C 
			      C EnumLanguageGroupLocalesW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumResourceLanguagesA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumResourceLanguagesA     C   EnumResourceLanguages equ <EnumResourceLanguagesA>
			      C ENDIF
			      C 
			      C EnumResourceLanguagesW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumResourceNamesA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumResourceNamesA	      C   EnumResourceNames equ <EnumResourceNamesA>
			      C ENDIF
			      C 
			      C EnumResourceNamesW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumResourceTypesA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumResourceTypesA	      C   EnumResourceTypes equ <EnumResourceTypesA>
			      C ENDIF
			      C 
			      C EnumResourceTypesW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumSystemCodePagesA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumSystemCodePagesA	      C   EnumSystemCodePages equ <EnumSystemCodePagesA>
			      C ENDIF
			      C 
			      C EnumSystemCodePagesW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumSystemGeoID PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C EnumSystemLanguageGroupsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumSystemLanguageGroups   C   EnumSystemLanguageGroups equ <EnumSystemLanguageGroupsA>
   A
			      C ENDIF
			      C 
			      C EnumSystemLanguageGroupsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumSystemLocalesA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumSystemLocalesA	      C   EnumSystemLocales equ <EnumSystemLocalesA>
			      C ENDIF
			      C 
			      C EnumSystemLocalesW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumTimeFormatsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumTimeFormatsA	      C   EnumTimeFormats equ <EnumTimeFormatsA>
			      C ENDIF
			      C 
			      C EnumTimeFormatsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumUILanguagesA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumUILanguagesA	      C   EnumUILanguages equ <EnumUILanguagesA>
			      C ENDIF
			      C 
			      C EnumUILanguagesW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EnumerateLocalComputerNamesA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = EnumerateLocalComputerNa   C   EnumerateLocalComputerNames equ <EnumerateLocalComputerNamesA>
   mesA
			      C ENDIF
			      C 
			      C EnumerateLocalComputerNamesW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C EraseTape PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C EscapeCommFunction PROTO STDCALL :DWORD,:DWORD
			      C ExitProcess PROTO STDCALL :DWORD
			      C ExitThread PROTO STDCALL :DWORD
			      C 
			      C ExpandEnvironmentStringsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = ExpandEnvironmentStrings   C   ExpandEnvironmentStrings equ <ExpandEnvironmentStringsA>
   A
			      C ENDIF
			      C 
			      C ExpandEnvironmentStringsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FatalAppExitA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FatalAppExitA	      C   FatalAppExit equ <FatalAppExitA>
			      C ENDIF
			      C 
			      C FatalAppExitW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FatalExit PROTO STDCALL :DWORD
			      C FileTimeToDosDateTime PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C FileTimeToLocalFileTime PROTO STDCALL :DWORD,:DWORD
			      C FileTimeToSystemTime PROTO STDCALL :DWORD,:DWORD
			      C FillConsoleOutputAttribute PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C FillConsoleOutputCharacterA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FillConsoleOutputCharact   C   FillConsoleOutputCharacter equ <FillConsoleOutputCharacterA>
   erA
			      C ENDIF
			      C 
			      C FillConsoleOutputCharacterW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindActCtxSectionGuid PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C FindActCtxSectionStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindActCtxSectionStringA   C   FindActCtxSectionString equ <FindActCtxSectionStringA>
			      C ENDIF
			      C 
			      C FindActCtxSectionStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindAtomA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = FindAtomA		      C   FindAtom equ <FindAtomA>
			      C ENDIF
			      C 
			      C FindAtomW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindClose PROTO STDCALL :DWORD
			      C FindCloseChangeNotification PROTO STDCALL :DWORD
			      C 
			      C FindFirstChangeNotificationA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindFirstChangeNotificat   C   FindFirstChangeNotification equ <FindFirstChangeNotificationA>
   ionA
			      C ENDIF
			      C 
			      C FindFirstChangeNotificationW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindFirstFileA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindFirstFileA	      C   FindFirstFile equ <FindFirstFileA>
			      C ENDIF
			      C 
			      C FindFirstFileExA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindFirstFileExA	      C   FindFirstFileEx equ <FindFirstFileExA>
			      C ENDIF
			      C 
			      C FindFirstFileExW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindFirstFileW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindFirstVolumeA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindFirstVolumeA	      C   FindFirstVolume equ <FindFirstVolumeA>
			      C ENDIF
			      C 
			      C FindFirstVolumeMountPointA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindFirstVolumeMountPoin   C   FindFirstVolumeMountPoint equ <FindFirstVolumeMountPointA>
   tA
			      C ENDIF
			      C 
			      C FindFirstVolumeMountPointW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindFirstVolumeW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindNextChangeNotification PROTO STDCALL :DWORD
			      C 
			      C FindNextFileA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindNextFileA	      C   FindNextFile equ <FindNextFileA>
			      C ENDIF
			      C 
			      C FindNextFileW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindNextVolumeA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindNextVolumeA	      C   FindNextVolume equ <FindNextVolumeA>
			      C ENDIF
			      C 
			      C FindNextVolumeMountPointA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindNextVolumeMountPoint   C   FindNextVolumeMountPoint equ <FindNextVolumeMountPointA>
   A
			      C ENDIF
			      C 
			      C FindNextVolumeMountPointW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindNextVolumeW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindResourceA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindResourceA	      C   FindResource equ <FindResourceA>
			      C ENDIF
			      C 
			      C FindResourceExA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FindResourceExA	      C   FindResourceEx equ <FindResourceExA>
			      C ENDIF
			      C 
			      C FindResourceExW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindResourceW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FindVolumeClose PROTO STDCALL :DWORD
			      C FindVolumeMountPointClose PROTO STDCALL :DWORD
			      C FlushConsoleInputBuffer PROTO STDCALL :DWORD
			      C FlushFileBuffers PROTO STDCALL :DWORD
			      C FlushInstructionCache PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C FlushViewOfFile PROTO STDCALL :DWORD,:DWORD
			      C 
			      C FoldStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FoldStringA		      C   FoldString equ <FoldStringA>
			      C ENDIF
			      C 
			      C FoldStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FormatMessageA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = FormatMessageA	      C   FormatMessage equ <FormatMessageA>
			      C ENDIF
			      C 
			      C FormatMessageW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FreeConsole PROTO STDCALL
			      C 
			      C FreeEnvironmentStringsA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = FreeEnvironmentStringsA    C   FreeEnvironmentStrings equ <FreeEnvironmentStringsA>
			      C ENDIF
			      C 
			      C FreeEnvironmentStringsW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C FreeLibrary PROTO STDCALL :DWORD
			      C FreeLibraryAndExitThread PROTO STDCALL :DWORD,:DWORD
			      C FreeResource PROTO STDCALL :DWORD
			      C FreeUserPhysicalPages PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GenerateConsoleCtrlEvent PROTO STDCALL :DWORD,:DWORD
			      C GetACP PROTO STDCALL
			      C 
			      C GetAtomNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetAtomNameA		      C   GetAtomName equ <GetAtomNameA>
			      C ENDIF
			      C 
			      C GetAtomNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C GetBinaryTypeA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetBinaryTypeA	      C   GetBinaryType equ <GetBinaryTypeA>
			      C ENDIF
			      C 
			      C GetBinaryTypeW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetCPInfo PROTO STDCALL :DWORD,:DWORD
			      C 
			      C GetCPInfoExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetCPInfoExA		      C   GetCPInfoEx equ <GetCPInfoExA>
			      C ENDIF
			      C 
			      C GetCPInfoExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetCalendarInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetCalendarInfoA	      C   GetCalendarInfo equ <GetCalendarInfoA>
			      C ENDIF
			      C 
			      C GetCalendarInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetCommConfig PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GetCommMask PROTO STDCALL :DWORD,:DWORD
			      C GetCommModemStatus PROTO STDCALL :DWORD,:DWORD
			      C GetCommProperties PROTO STDCALL :DWORD,:DWORD
			      C GetCommState PROTO STDCALL :DWORD,:DWORD
			      C GetCommTimeouts PROTO STDCALL :DWORD,:DWORD
			      C 
			      C GetCommandLineA PROTO STDCALL
			      C IFNDEF __UNICODE__
 = GetCommandLineA	      C   GetCommandLine equ <GetCommandLineA>
			      C ENDIF
			      C 
			      C GetCommandLineW PROTO STDCALL
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetCompressedFileSizeA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetCompressedFileSizeA     C   GetCompressedFileSize equ <GetCompressedFileSizeA>
			      C ENDIF
			      C 
			      C GetCompressedFileSizeW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetComputerNameA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetComputerNameA	      C   GetComputerName equ <GetComputerNameA>
			      C ENDIF
			      C 
			      C GetComputerNameExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetComputerNameExA	      C   GetComputerNameEx equ <GetComputerNameExA>
			      C ENDIF
			      C 
			      C GetComputerNameExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetComputerNameW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetConsoleCP PROTO STDCALL
			      C GetConsoleCursorInfo PROTO STDCALL :DWORD,:DWORD
			      C GetConsoleDisplayMode PROTO STDCALL :DWORD
			      C GetConsoleFontSize PROTO STDCALL :DWORD,:DWORD
			      C GetConsoleMode PROTO STDCALL :DWORD,:DWORD
			      C GetConsoleOutputCP PROTO STDCALL
			      C GetConsoleProcessList PROTO STDCALL :DWORD,:DWORD
			      C GetConsoleScreenBufferInfo PROTO STDCALL :DWORD,:DWORD
			      C GetConsoleSelectionInfo PROTO STDCALL :DWORD
			      C 
			      C GetConsoleTitleA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetConsoleTitleA	      C   GetConsoleTitle equ <GetConsoleTitleA>
			      C ENDIF
			      C 
			      C GetConsoleTitleW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetConsoleWindow PROTO STDCALL
			      C 
			      C GetCurrencyFormatA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetCurrencyFormatA	      C   GetCurrencyFormat equ <GetCurrencyFormatA>
			      C ENDIF
			      C 
			      C GetCurrencyFormatW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetCurrentActCtx PROTO STDCALL :DWORD
			      C GetCurrentConsoleFont PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C GetCurrentDirectoryA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetCurrentDirectoryA	      C   GetCurrentDirectory equ <GetCurrentDirectoryA>
			      C ENDIF
			      C 
			      C GetCurrentDirectoryW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetCurrentProcess PROTO STDCALL
			      C GetCurrentProcessId PROTO STDCALL
			      C GetCurrentThread PROTO STDCALL
			      C GetCurrentThreadId PROTO STDCALL
			      C 
			      C GetDateFormatA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetDateFormatA	      C   GetDateFormat equ <GetDateFormatA>
			      C ENDIF
			      C 
			      C GetDateFormatW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetDefaultCommConfigA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetDefaultCommConfigA      C   GetDefaultCommConfig equ <GetDefaultCommConfigA>
			      C ENDIF
			      C 
			      C GetDefaultCommConfigW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetDevicePowerState PROTO STDCALL :DWORD,:DWORD
			      C 
			      C GetDiskFreeSpaceA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetDiskFreeSpaceA	      C   GetDiskFreeSpace equ <GetDiskFreeSpaceA>
			      C ENDIF
			      C 
			      C GetDiskFreeSpaceExA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetDiskFreeSpaceExA	      C   GetDiskFreeSpaceEx equ <GetDiskFreeSpaceExA>
			      C ENDIF
			      C 
			      C GetDiskFreeSpaceExW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetDiskFreeSpaceW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetDllDirectoryA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetDllDirectoryA	      C   GetDllDirectory equ <GetDllDirectoryA>
			      C ENDIF
			      C 
			      C GetDllDirectoryW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetDriveTypeA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = GetDriveTypeA	      C   GetDriveType equ <GetDriveTypeA>
			      C ENDIF
			      C 
			      C GetDriveTypeW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C GetEnvironmentStringsA PROTO STDCALL
			      C IFNDEF __UNICODE__
 = GetEnvironmentStringsA     C   GetEnvironmentStrings equ <GetEnvironmentStringsA>
			      C ENDIF
			      C 
			      C GetEnvironmentStringsW PROTO STDCALL
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetEnvironmentVariableA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetEnvironmentVariableA    C   GetEnvironmentVariable equ <GetEnvironmentVariableA>
			      C ENDIF
			      C 
			      C GetEnvironmentVariableW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetExitCodeProcess PROTO STDCALL :DWORD,:DWORD
			      C GetExitCodeThread PROTO STDCALL :DWORD,:DWORD
			      C 
			      C GetFileAttributesA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = GetFileAttributesA	      C   GetFileAttributes equ <GetFileAttributesA>
			      C ENDIF
			      C 
			      C GetFileAttributesExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetFileAttributesExA	      C   GetFileAttributesEx equ <GetFileAttributesExA>
			      C ENDIF
			      C 
			      C GetFileAttributesExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetFileAttributesW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetFileInformationByHandle PROTO STDCALL :DWORD,:DWORD
			      C GetFileSize PROTO STDCALL :DWORD,:DWORD
			      C GetFileSizeEx PROTO STDCALL :DWORD,:DWORD
			      C GetFileTime PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C GetFileType PROTO STDCALL :DWORD
			      C 
			      C GetFirmwareEnvironmentVariableA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetFirmwareEnvironmentVa   C   GetFirmwareEnvironmentVariable equ <GetFirmwareEnvironmentVariableA>
   riableA
			      C ENDIF
			      C 
			      C GetFirmwareEnvironmentVariableW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetFullPathNameA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetFullPathNameA	      C   GetFullPathName equ <GetFullPathNameA>
			      C ENDIF
			      C 
			      C GetFullPathNameW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetGeoInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetGeoInfoA		      C   GetGeoInfo equ <GetGeoInfoA>
			      C ENDIF
			      C 
			      C GetGeoInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetHandleInformation PROTO STDCALL :DWORD,:DWORD
			      C GetLargestConsoleWindowSize PROTO STDCALL :DWORD
			      C GetLastError PROTO STDCALL
			      C GetLocalTime PROTO STDCALL :DWORD
			      C 
			      C GetLocaleInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetLocaleInfoA	      C   GetLocaleInfo equ <GetLocaleInfoA>
			      C ENDIF
			      C 
			      C GetLocaleInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetLogicalDriveStringsA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetLogicalDriveStringsA    C   GetLogicalDriveStrings equ <GetLogicalDriveStringsA>
			      C ENDIF
			      C 
			      C GetLogicalDriveStringsW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetLogicalDrives PROTO STDCALL
			      C 
			      C GetLongPathNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetLongPathNameA	      C   GetLongPathName equ <GetLongPathNameA>
			      C ENDIF
			      C 
			      C GetLongPathNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetMailslotInfo PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C GetModuleFileNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetModuleFileNameA	      C   GetModuleFileName equ <GetModuleFileNameA>
			      C ENDIF
			      C 
			      C GetModuleFileNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetModuleHandleA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = GetModuleHandleA	      C   GetModuleHandle equ <GetModuleHandleA>
			      C ENDIF
			      C 
			      C GetModuleHandleExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetModuleHandleExA	      C   GetModuleHandleEx equ <GetModuleHandleExA>
			      C ENDIF
			      C 
			      C GetModuleHandleExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetModuleHandleW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetNamedPipeHandleStateA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetNamedPipeHandleStateA   C   GetNamedPipeHandleState equ <GetNamedPipeHandleStateA>
			      C ENDIF
			      C 
			      C GetNamedPipeHandleStateW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetNamedPipeInfo PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C GetNativeSystemInfo PROTO STDCALL :DWORD
			      C GetNumaAvailableMemory PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GetNumaAvailableMemoryNode PROTO STDCALL :DWORD,:DWORD
			      C GetNumaHighestNodeNumber PROTO STDCALL :DWORD
			      C GetNumaNodeProcessorMask PROTO STDCALL :DWORD,:DWORD
			      C GetNumaProcessorMap PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GetNumaProcessorNode PROTO STDCALL :DWORD,:DWORD
			      C 
			      C GetNumberFormatA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetNumberFormatA	      C   GetNumberFormat equ <GetNumberFormatA>
			      C ENDIF
			      C 
			      C GetNumberFormatW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetNumberOfConsoleInputEvents PROTO STDCALL :DWORD,:DWORD
			      C GetNumberOfConsoleMouseButtons PROTO STDCALL :DWORD
			      C GetOEMCP PROTO STDCALL
			      C GetOverlappedResult PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C GetPriorityClass PROTO STDCALL :DWORD
			      C 
			      C GetPrivateProfileIntA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetPrivateProfileIntA      C   GetPrivateProfileInt equ <GetPrivateProfileIntA>
			      C ENDIF
			      C 
			      C GetPrivateProfileIntW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetPrivateProfileSectionA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetPrivateProfileSection   C   GetPrivateProfileSection equ <GetPrivateProfileSectionA>
   A
			      C ENDIF
			      C 
			      C GetPrivateProfileSectionNamesA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetPrivateProfileSection   C   GetPrivateProfileSectionNames equ <GetPrivateProfileSectionNamesA>
   NamesA
			      C ENDIF
			      C 
			      C GetPrivateProfileSectionNamesW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetPrivateProfileSectionW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetPrivateProfileStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetPrivateProfileStringA   C   GetPrivateProfileString equ <GetPrivateProfileStringA>
			      C ENDIF
			      C 
			      C GetPrivateProfileStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetPrivateProfileStructA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetPrivateProfileStructA   C   GetPrivateProfileStruct equ <GetPrivateProfileStructA>
			      C ENDIF
			      C 
			      C GetPrivateProfileStructW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetProcAddress PROTO STDCALL :DWORD,:DWORD
			      C GetProcessAffinityMask PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GetProcessHandleCount PROTO STDCALL :DWORD,:DWORD
			      C GetProcessHeap PROTO STDCALL
			      C GetProcessHeaps PROTO STDCALL :DWORD,:DWORD
			      C GetProcessId PROTO STDCALL :DWORD
			      C GetProcessIoCounters PROTO STDCALL :DWORD,:DWORD
			      C GetProcessPriorityBoost PROTO STDCALL :DWORD,:DWORD
			      C GetProcessShutdownParameters PROTO STDCALL :DWORD,:DWORD
			      C GetProcessTimes PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C GetProcessVersion PROTO STDCALL :DWORD
			      C GetProcessWorkingSetSize PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C GetProfileIntA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetProfileIntA	      C   GetProfileInt equ <GetProfileIntA>
			      C ENDIF
			      C 
			      C GetProfileIntW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetProfileSectionA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetProfileSectionA	      C   GetProfileSection equ <GetProfileSectionA>
			      C ENDIF
			      C 
			      C GetProfileSectionW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetProfileStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetProfileStringA	      C   GetProfileString equ <GetProfileStringA>
			      C ENDIF
			      C 
			      C GetProfileStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetQueuedCompletionStatus PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C GetShortPathNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetShortPathNameA	      C   GetShortPathName equ <GetShortPathNameA>
			      C ENDIF
			      C 
			      C GetShortPathNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetStartupInfoA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = GetStartupInfoA	      C   GetStartupInfo equ <GetStartupInfoA>
			      C ENDIF
			      C 
			      C GetStartupInfoW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetStdHandle PROTO STDCALL :DWORD
			      C 
			      C GetStringTypeA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetStringTypeA	      C   GetStringType equ <GetStringTypeA>
			      C ENDIF
			      C 
			      C GetStringTypeExA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetStringTypeExA	      C   GetStringTypeEx equ <GetStringTypeExA>
			      C ENDIF
			      C 
			      C GetStringTypeExW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetStringTypeW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetSystemDefaultLCID PROTO STDCALL
			      C GetSystemDefaultLangID PROTO STDCALL
			      C GetSystemDefaultUILanguage PROTO STDCALL
			      C 
			      C GetSystemDirectoryA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetSystemDirectoryA	      C   GetSystemDirectory equ <GetSystemDirectoryA>
			      C ENDIF
			      C 
			      C GetSystemDirectoryW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetSystemInfo PROTO STDCALL :DWORD
			      C GetSystemPowerStatus PROTO STDCALL :DWORD
			      C GetSystemRegistryQuota PROTO STDCALL :DWORD,:DWORD
			      C GetSystemTime PROTO STDCALL :DWORD
			      C GetSystemTimeAdjustment PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GetSystemTimeAsFileTime PROTO STDCALL :DWORD
			      C GetSystemTimes PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C GetSystemWindowsDirectoryA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetSystemWindowsDirector   C   GetSystemWindowsDirectory equ <GetSystemWindowsDirectoryA>
   yA
			      C ENDIF
			      C 
			      C GetSystemWindowsDirectoryW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetSystemWow64DirectoryA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetSystemWow64DirectoryA   C   GetSystemWow64Directory equ <GetSystemWow64DirectoryA>
			      C ENDIF
			      C 
			      C GetSystemWow64DirectoryW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetTapeParameters PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C GetTapePosition PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C GetTapeStatus PROTO STDCALL :DWORD
			      C 
			      C GetTempFileNameA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetTempFileNameA	      C   GetTempFileName equ <GetTempFileNameA>
			      C ENDIF
			      C 
			      C GetTempFileNameW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetTempPathA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetTempPathA		      C   GetTempPath equ <GetTempPathA>
			      C ENDIF
			      C 
			      C GetTempPathW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetThreadContext PROTO STDCALL :DWORD,:DWORD
			      C GetThreadIOPendingFlag PROTO STDCALL :DWORD,:DWORD
			      C GetThreadLocale PROTO STDCALL
			      C GetThreadPriority PROTO STDCALL :DWORD
			      C GetThreadPriorityBoost PROTO STDCALL :DWORD,:DWORD
			      C GetThreadSelectorEntry PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GetThreadTimes PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C GetTickCount PROTO STDCALL
			      C 
			      C GetTimeFormatA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetTimeFormatA	      C   GetTimeFormat equ <GetTimeFormatA>
			      C ENDIF
			      C 
			      C GetTimeFormatW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetTimeZoneInformation PROTO STDCALL :DWORD
			      C GetUserDefaultLCID PROTO STDCALL
			      C GetUserDefaultLangID PROTO STDCALL
			      C GetUserDefaultUILanguage PROTO STDCALL
			      C GetUserGeoID PROTO STDCALL :DWORD
			      C GetVersion PROTO STDCALL
			      C 
			      C GetVersionExA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = GetVersionExA	      C   GetVersionEx equ <GetVersionExA>
			      C ENDIF
			      C 
			      C GetVersionExW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetVolumeInformationA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetVolumeInformationA      C   GetVolumeInformation equ <GetVolumeInformationA>
			      C ENDIF
			      C 
			      C GetVolumeInformationW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetVolumeNameForVolumeMountPointA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetVolumeNameForVolumeMo   C   GetVolumeNameForVolumeMountPoint equ <GetVolumeNameForVolumeMountPointA>
   untPointA
			      C ENDIF
			      C 
			      C GetVolumeNameForVolumeMountPointW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetVolumePathNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetVolumePathNameA	      C   GetVolumePathName equ <GetVolumePathNameA>
			      C ENDIF
			      C 
			      C GetVolumePathNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetVolumePathNamesForVolumeNameA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetVolumePathNamesForVol   C   GetVolumePathNamesForVolumeName equ <GetVolumePathNamesForVolumeNameA>
   umeNameA
			      C ENDIF
			      C 
			      C GetVolumePathNamesForVolumeNameW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetWindowsDirectoryA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GetWindowsDirectoryA	      C   GetWindowsDirectory equ <GetWindowsDirectoryA>
			      C ENDIF
			      C 
			      C GetWindowsDirectoryW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GetWriteWatch PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C GlobalAddAtomA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = GlobalAddAtomA	      C   GlobalAddAtom equ <GlobalAddAtomA>
			      C ENDIF
			      C 
			      C GlobalAddAtomW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GlobalAlloc PROTO STDCALL :DWORD,:DWORD
			      C GlobalCompact PROTO STDCALL :DWORD
			      C GlobalDeleteAtom PROTO STDCALL :DWORD
			      C 
			      C GlobalFindAtomA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = GlobalFindAtomA	      C   GlobalFindAtom equ <GlobalFindAtomA>
			      C ENDIF
			      C 
			      C GlobalFindAtomW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GlobalFix PROTO STDCALL :DWORD
			      C GlobalFlags PROTO STDCALL :DWORD
			      C GlobalFree PROTO STDCALL :DWORD
			      C 
			      C GlobalGetAtomNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = GlobalGetAtomNameA	      C   GlobalGetAtomName equ <GlobalGetAtomNameA>
			      C ENDIF
			      C 
			      C GlobalGetAtomNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C GlobalHandle PROTO STDCALL :DWORD
			      C GlobalLock PROTO STDCALL :DWORD
			      C GlobalMemoryStatus PROTO STDCALL :DWORD
			      C GlobalMemoryStatusEx PROTO STDCALL :DWORD
			      C GlobalReAlloc PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C GlobalSize PROTO STDCALL :DWORD
			      C GlobalUnWire PROTO STDCALL :DWORD
			      C GlobalUnfix PROTO STDCALL :DWORD
			      C GlobalUnlock PROTO STDCALL :DWORD
			      C GlobalWire PROTO STDCALL :DWORD
			      C Heap32First PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C Heap32ListFirst PROTO STDCALL :DWORD,:DWORD
			      C Heap32ListNext PROTO STDCALL :DWORD,:DWORD
			      C Heap32Next PROTO STDCALL :DWORD
			      C HeapAlloc PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C HeapCompact PROTO STDCALL :DWORD,:DWORD
			      C HeapCreate PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C HeapDestroy PROTO STDCALL :DWORD
			      C HeapFree PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C HeapLock PROTO STDCALL :DWORD
			      C HeapQueryInformation PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C HeapReAlloc PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C HeapSetInformation PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C HeapSize PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C HeapUnlock PROTO STDCALL :DWORD
			      C HeapValidate PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C HeapWalk PROTO STDCALL :DWORD,:DWORD
			      C InitAtomTable PROTO STDCALL :DWORD
			      C InitializeCriticalSection PROTO STDCALL :DWORD
			      C InitializeCriticalSectionAndSpinCount PROTO STDCALL :DWORD,:DWORD
			      C InitializeSListHead PROTO STDCALL :DWORD
			      C InterlockedCompareExchange PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C InterlockedDecrement PROTO STDCALL :DWORD
			      C InterlockedExchange PROTO STDCALL :DWORD,:DWORD
			      C InterlockedExchangeAdd PROTO STDCALL :DWORD,:DWORD
			      C InterlockedFlushSList PROTO STDCALL :DWORD
			      C InterlockedIncrement PROTO STDCALL :DWORD
			      C InterlockedPopEntrySList PROTO STDCALL :DWORD
			      C InterlockedPushEntrySList PROTO STDCALL :DWORD,:DWORD
			      C IsBadCodePtr PROTO STDCALL :DWORD
			      C IsBadHugeReadPtr PROTO STDCALL :DWORD,:DWORD
			      C IsBadHugeWritePtr PROTO STDCALL :DWORD,:DWORD
			      C IsBadReadPtr PROTO STDCALL :DWORD,:DWORD
			      C 
			      C IsBadStringPtrA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = IsBadStringPtrA	      C   IsBadStringPtr equ <IsBadStringPtrA>
			      C ENDIF
			      C 
			      C IsBadStringPtrW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C IsBadWritePtr PROTO STDCALL :DWORD,:DWORD
			      C IsDBCSLeadByte PROTO STDCALL :DWORD
			      C IsDBCSLeadByteEx PROTO STDCALL :DWORD,:DWORD
			      C IsDebuggerPresent PROTO STDCALL
			      C IsProcessInJob PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IsProcessorFeaturePresent PROTO STDCALL :DWORD
			      C IsSystemResumeAutomatic PROTO STDCALL
			      C IsValidCodePage PROTO STDCALL :DWORD
			      C IsValidLanguageGroup PROTO STDCALL :DWORD,:DWORD
			      C IsValidLocale PROTO STDCALL :DWORD,:DWORD
			      C IsWow64Process PROTO STDCALL :DWORD,:DWORD
			      C 
			      C LCMapStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = LCMapStringA		      C   LCMapString equ <LCMapStringA>
			      C ENDIF
			      C 
			      C LCMapStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C LeaveCriticalSection PROTO STDCALL :DWORD
			      C 
			      C LoadLibraryA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = LoadLibraryA		      C   LoadLibrary equ <LoadLibraryA>
			      C ENDIF
			      C 
			      C LoadLibraryExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = LoadLibraryExA	      C   LoadLibraryEx equ <LoadLibraryExA>
			      C ENDIF
			      C 
			      C LoadLibraryExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C LoadLibraryW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C LoadModule PROTO STDCALL :DWORD,:DWORD
			      C LoadResource PROTO STDCALL :DWORD,:DWORD
			      C LocalAlloc PROTO STDCALL :DWORD,:DWORD
			      C LocalCompact PROTO STDCALL :DWORD
			      C LocalFileTimeToFileTime PROTO STDCALL :DWORD,:DWORD
			      C LocalFlags PROTO STDCALL :DWORD
			      C LocalFree PROTO STDCALL :DWORD
			      C LocalHandle PROTO STDCALL :DWORD
			      C LocalLock PROTO STDCALL :DWORD
			      C LocalReAlloc PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C LocalShrink PROTO STDCALL :DWORD,:DWORD
			      C LocalSize PROTO STDCALL :DWORD
			      C LocalUnlock PROTO STDCALL :DWORD
			      C LockFile PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C LockFileEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C LockResource PROTO STDCALL :DWORD
			      C MapUserPhysicalPages PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C MapUserPhysicalPagesScatter PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C MapViewOfFile PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C MapViewOfFileEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C Module32FirstW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C Module32NextW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C MoveFileA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = MoveFileA		      C   MoveFile equ <MoveFileA>
			      C ENDIF
			      C 
			      C MoveFileExA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = MoveFileExA		      C   MoveFileEx equ <MoveFileExA>
			      C ENDIF
			      C 
			      C MoveFileExW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C MoveFileW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C MoveFileWithProgressA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = MoveFileWithProgressA      C   MoveFileWithProgress equ <MoveFileWithProgressA>
			      C ENDIF
			      C 
			      C MoveFileWithProgressW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C MulDiv PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C MultiByteToWideChar PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C NumaVirtualQueryNode PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C OpenEventA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = OpenEventA		      C   OpenEvent equ <OpenEventA>
			      C ENDIF
			      C 
			      C OpenEventW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C OpenFile PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C OpenFileMappingA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = OpenFileMappingA	      C   OpenFileMapping equ <OpenFileMappingA>
			      C ENDIF
			      C 
			      C OpenFileMappingW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C OpenJobObjectA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = OpenJobObjectA	      C   OpenJobObject equ <OpenJobObjectA>
			      C ENDIF
			      C 
			      C OpenJobObjectW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C OpenMutexA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = OpenMutexA		      C   OpenMutex equ <OpenMutexA>
			      C ENDIF
			      C 
			      C OpenMutexW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C OpenProcess PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C OpenSemaphoreA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = OpenSemaphoreA	      C   OpenSemaphore equ <OpenSemaphoreA>
			      C ENDIF
			      C 
			      C OpenSemaphoreW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C OpenThread PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C OpenWaitableTimerA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = OpenWaitableTimerA	      C   OpenWaitableTimer equ <OpenWaitableTimerA>
			      C ENDIF
			      C 
			      C OpenWaitableTimerW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C OutputDebugStringA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = OutputDebugStringA	      C   OutputDebugString equ <OutputDebugStringA>
			      C ENDIF
			      C 
			      C OutputDebugStringW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C PeekConsoleInputA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = PeekConsoleInputA	      C   PeekConsoleInput equ <PeekConsoleInputA>
			      C ENDIF
			      C 
			      C PeekConsoleInputW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C PeekNamedPipe PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C PostQueuedCompletionStatus PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C PrepareTape PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C Process32FirstW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C Process32NextW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ProcessIdToSessionId PROTO STDCALL :DWORD,:DWORD
			      C PulseEvent PROTO STDCALL :DWORD
			      C PurgeComm PROTO STDCALL :DWORD,:DWORD
			      C 
			      C QueryActCtxW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C QueryDepthSList PROTO STDCALL :DWORD
			      C 
			      C QueryDosDeviceA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = QueryDosDeviceA	      C   QueryDosDevice equ <QueryDosDeviceA>
			      C ENDIF
			      C 
			      C QueryDosDeviceW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C QueryInformationJobObject PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C QueryMemoryResourceNotification PROTO STDCALL :DWORD,:DWORD
			      C QueryPerformanceCounter PROTO STDCALL :DWORD
			      C QueryPerformanceFrequency PROTO STDCALL :DWORD
			      C QueueUserAPC PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C QueueUserWorkItem PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C RaiseException PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C ReadConsoleA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = ReadConsoleA		      C   ReadConsole equ <ReadConsoleA>
			      C ENDIF
			      C 
			      C ReadConsoleInputA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = ReadConsoleInputA	      C   ReadConsoleInput equ <ReadConsoleInputA>
			      C ENDIF
			      C 
			      C ReadConsoleInputW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ReadConsoleOutputA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = ReadConsoleOutputA	      C   ReadConsoleOutput equ <ReadConsoleOutputA>
			      C ENDIF
			      C 
			      C ReadConsoleOutputAttribute PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C ReadConsoleOutputCharacterA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = ReadConsoleOutputCharact   C   ReadConsoleOutputCharacter equ <ReadConsoleOutputCharacterA>
   erA
			      C ENDIF
			      C 
			      C ReadConsoleOutputCharacterW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ReadConsoleOutputW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ReadConsoleW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ReadDirectoryChangesW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ReadFile PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C ReadFileEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C ReadFileScatter PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C ReadProcessMemory PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C RegisterWaitForSingleObject PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C RegisterWaitForSingleObjectEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C ReleaseActCtx PROTO STDCALL :DWORD
			      C ReleaseMutex PROTO STDCALL :DWORD
			      C ReleaseSemaphore PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C RemoveDirectoryA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = RemoveDirectoryA	      C   RemoveDirectory equ <RemoveDirectoryA>
			      C ENDIF
			      C 
			      C RemoveDirectoryW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C RemoveLocalAlternateComputerNameA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = RemoveLocalAlternateComp   C   RemoveLocalAlternateComputerName equ <RemoveLocalAlternateComputerNameA>
   uterNameA
			      C ENDIF
			      C 
			      C RemoveLocalAlternateComputerNameW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C RemoveVectoredExceptionHandler PROTO STDCALL :DWORD
			      C 
			      C ReplaceFileA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = ReplaceFileA		      C   ReplaceFile equ <ReplaceFileA>
			      C ENDIF
			      C 
			      C ReplaceFileW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C RequestDeviceWakeup PROTO STDCALL :DWORD
			      C RequestWakeupLatency PROTO STDCALL :DWORD
			      C ResetEvent PROTO STDCALL :DWORD
			      C ResetWriteWatch PROTO STDCALL :DWORD,:DWORD
			      C RestoreLastError PROTO STDCALL :DWORD
			      C ResumeThread PROTO STDCALL :DWORD
			      C RtlCaptureContext PROTO STDCALL :DWORD
			      C RtlCaptureStackBackTrace PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C RtlFillMemory PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C RtlMoveMemory PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C RtlUnwind PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C RtlZeroMemory PROTO STDCALL :DWORD,:DWORD
			      C 
			      C ScrollConsoleScreenBufferA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = ScrollConsoleScreenBuffe   C   ScrollConsoleScreenBuffer equ <ScrollConsoleScreenBufferA>
   rA
			      C ENDIF
			      C 
			      C ScrollConsoleScreenBufferW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SearchPathA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SearchPathA		      C   SearchPath equ <SearchPathA>
			      C ENDIF
			      C 
			      C SearchPathW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetCalendarInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetCalendarInfoA	      C   SetCalendarInfo equ <SetCalendarInfoA>
			      C ENDIF
			      C 
			      C SetCalendarInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetCommBreak PROTO STDCALL :DWORD
			      C SetCommConfig PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C SetCommMask PROTO STDCALL :DWORD,:DWORD
			      C SetCommState PROTO STDCALL :DWORD,:DWORD
			      C SetCommTimeouts PROTO STDCALL :DWORD,:DWORD
			      C 
			      C SetComputerNameA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = SetComputerNameA	      C   SetComputerName equ <SetComputerNameA>
			      C ENDIF
			      C 
			      C SetComputerNameExA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetComputerNameExA	      C   SetComputerNameEx equ <SetComputerNameExA>
			      C ENDIF
			      C 
			      C SetComputerNameExW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetComputerNameW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetConsoleActiveScreenBuffer PROTO STDCALL :DWORD
			      C SetConsoleCP PROTO STDCALL :DWORD
			      C SetConsoleCtrlHandler PROTO STDCALL :DWORD,:DWORD
			      C SetConsoleCursor PROTO STDCALL :DWORD,:DWORD
			      C SetConsoleCursorInfo PROTO STDCALL :DWORD,:DWORD
			      C SetConsoleCursorPosition PROTO STDCALL :DWORD,:DWORD
			      C SetConsoleMode PROTO STDCALL :DWORD,:DWORD
			      C SetConsoleOutputCP PROTO STDCALL :DWORD
			      C SetConsoleScreenBufferSize PROTO STDCALL :DWORD,:DWORD
			      C SetConsoleTextAttribute PROTO STDCALL :DWORD,:DWORD
			      C 
			      C SetConsoleTitleA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = SetConsoleTitleA	      C   SetConsoleTitle equ <SetConsoleTitleA>
			      C ENDIF
			      C 
			      C SetConsoleTitleW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetConsoleWindowInfo PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C SetCriticalSectionSpinCount PROTO STDCALL :DWORD,:DWORD
			      C 
			      C SetCurrentDirectoryA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = SetCurrentDirectoryA	      C   SetCurrentDirectory equ <SetCurrentDirectoryA>
			      C ENDIF
			      C 
			      C SetCurrentDirectoryW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetDefaultCommConfigA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetDefaultCommConfigA      C   SetDefaultCommConfig equ <SetDefaultCommConfigA>
			      C ENDIF
			      C 
			      C SetDefaultCommConfigW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetDllDirectoryA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = SetDllDirectoryA	      C   SetDllDirectory equ <SetDllDirectoryA>
			      C ENDIF
			      C 
			      C SetDllDirectoryW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetEndOfFile PROTO STDCALL :DWORD
			      C 
			      C SetEnvironmentVariableA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetEnvironmentVariableA    C   SetEnvironmentVariable equ <SetEnvironmentVariableA>
			      C ENDIF
			      C 
			      C SetEnvironmentVariableW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetErrorMode PROTO STDCALL :DWORD
			      C SetEvent PROTO STDCALL :DWORD
			      C SetFileApisToANSI PROTO STDCALL
			      C SetFileApisToOEM PROTO STDCALL
			      C 
			      C SetFileAttributesA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetFileAttributesA	      C   SetFileAttributes equ <SetFileAttributesA>
			      C ENDIF
			      C 
			      C SetFileAttributesW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetFilePointer PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C SetFilePointerEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C SetFileShortNameA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetFileShortNameA	      C   SetFileShortName equ <SetFileShortNameA>
			      C ENDIF
			      C 
			      C SetFileShortNameW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetFileTime PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C SetFileValidData PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C SetFirmwareEnvironmentVariableA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetFirmwareEnvironmentVa   C   SetFirmwareEnvironmentVariable equ <SetFirmwareEnvironmentVariableA>
   riableA
			      C ENDIF
			      C 
			      C SetFirmwareEnvironmentVariableW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetHandleCount PROTO STDCALL :DWORD
			      C SetHandleInformation PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C SetInformationJobObject PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C SetLastError PROTO STDCALL :DWORD
			      C 
			      C SetLocalPrimaryComputerNameA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetLocalPrimaryComputerN   C   SetLocalPrimaryComputerName equ <SetLocalPrimaryComputerNameA>
   ameA
			      C ENDIF
			      C 
			      C SetLocalPrimaryComputerNameW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetLocalTime PROTO STDCALL :DWORD
			      C 
			      C SetLocaleInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetLocaleInfoA	      C   SetLocaleInfo equ <SetLocaleInfoA>
			      C ENDIF
			      C 
			      C SetLocaleInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetMailslotInfo PROTO STDCALL :DWORD,:DWORD
			      C SetMessageWaitingIndicator PROTO STDCALL :DWORD,:DWORD
			      C SetNamedPipeHandleState PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C SetPriorityClass PROTO STDCALL :DWORD,:DWORD
			      C SetProcessAffinityMask PROTO STDCALL :DWORD,:DWORD
			      C SetProcessPriorityBoost PROTO STDCALL :DWORD,:DWORD
			      C SetProcessShutdownParameters PROTO STDCALL :DWORD,:DWORD
			      C SetProcessWorkingSetSize PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C SetStdHandle PROTO STDCALL :DWORD,:DWORD
			      C SetSystemPowerState PROTO STDCALL :DWORD,:DWORD
			      C SetSystemTime PROTO STDCALL :DWORD
			      C SetSystemTimeAdjustment PROTO STDCALL :DWORD,:DWORD
			      C SetTapeParameters PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C SetTapePosition PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C SetThreadAffinityMask PROTO STDCALL :DWORD,:DWORD
			      C SetThreadContext PROTO STDCALL :DWORD,:DWORD
			      C SetThreadExecutionState PROTO STDCALL :DWORD
			      C SetThreadIdealProcessor PROTO STDCALL :DWORD,:DWORD
			      C SetThreadLocale PROTO STDCALL :DWORD
			      C SetThreadPriority PROTO STDCALL :DWORD,:DWORD
			      C SetThreadPriorityBoost PROTO STDCALL :DWORD,:DWORD
			      C SetTimeZoneInformation PROTO STDCALL :DWORD
			      C SetTimerQueueTimer PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C SetUnhandledExceptionFilter PROTO STDCALL :DWORD
			      C SetUserGeoID PROTO STDCALL :DWORD
			      C 
			      C SetVolumeLabelA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetVolumeLabelA	      C   SetVolumeLabel equ <SetVolumeLabelA>
			      C ENDIF
			      C 
			      C SetVolumeLabelW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetVolumeMountPointA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = SetVolumeMountPointA	      C   SetVolumeMountPoint equ <SetVolumeMountPointA>
			      C ENDIF
			      C 
			      C SetVolumeMountPointW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SetWaitableTimer PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C SetupComm PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C SignalObjectAndWait PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C SizeofResource PROTO STDCALL :DWORD,:DWORD
			      C Sleep PROTO STDCALL :DWORD
			      C SleepEx PROTO STDCALL :DWORD,:DWORD
			      C SuspendThread PROTO STDCALL :DWORD
			      C SwitchToFiber PROTO STDCALL :DWORD
			      C SwitchToThread PROTO STDCALL
			      C SystemTimeToFileTime PROTO STDCALL :DWORD,:DWORD
			      C SystemTimeToTzSpecificLocalTime PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C TerminateJobObject PROTO STDCALL :DWORD,:DWORD
			      C TerminateProcess PROTO STDCALL :DWORD,:DWORD
			      C TerminateThread PROTO STDCALL :DWORD,:DWORD
			      C Thread32First PROTO STDCALL :DWORD,:DWORD
			      C Thread32Next PROTO STDCALL :DWORD,:DWORD
			      C TlsAlloc PROTO STDCALL
			      C TlsFree PROTO STDCALL :DWORD
			      C TlsGetValue PROTO STDCALL :DWORD
			      C TlsSetValue PROTO STDCALL :DWORD,:DWORD
			      C Toolhelp32ReadProcessMemory PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C TransactNamedPipe PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C TransmitCommChar PROTO STDCALL :DWORD,:DWORD
			      C TryEnterCriticalSection PROTO STDCALL :DWORD
			      C TzSpecificLocalTimeToSystemTime PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C UnhandledExceptionFilter PROTO STDCALL :DWORD
			      C UnlockFile PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C UnlockFileEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C UnmapViewOfFile PROTO STDCALL :DWORD
			      C UnregisterWait PROTO STDCALL :DWORD
			      C UnregisterWaitEx PROTO STDCALL :DWORD,:DWORD
			      C 
			      C UpdateResourceA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = UpdateResourceA	      C   UpdateResource equ <UpdateResourceA>
			      C ENDIF
			      C 
			      C UpdateResourceW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C VerLanguageNameA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = VerLanguageNameA	      C   VerLanguageName equ <VerLanguageNameA>
			      C ENDIF
			      C 
			      C VerLanguageNameW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C VerSetConditionMask PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C VerifyVersionInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = VerifyVersionInfoA	      C   VerifyVersionInfo equ <VerifyVersionInfoA>
			      C ENDIF
			      C 
			      C VerifyVersionInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C VirtualAlloc PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C VirtualAllocEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C VirtualFree PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C VirtualFreeEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C VirtualLock PROTO STDCALL :DWORD,:DWORD
			      C VirtualProtect PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C VirtualProtectEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C VirtualQuery PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C VirtualQueryEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C VirtualUnlock PROTO STDCALL :DWORD,:DWORD
			      C WTSGetActiveConsoleSessionId PROTO STDCALL
			      C WaitCommEvent PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C WaitForDebugEvent PROTO STDCALL :DWORD,:DWORD
			      C WaitForMultipleObjects PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C WaitForMultipleObjectsEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C WaitForSingleObject PROTO STDCALL :DWORD,:DWORD
			      C WaitForSingleObjectEx PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C WaitNamedPipeA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WaitNamedPipeA	      C   WaitNamedPipe equ <WaitNamedPipeA>
			      C ENDIF
			      C 
			      C WaitNamedPipeW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WideCharToMultiByte PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C WinExec PROTO STDCALL :DWORD,:DWORD
			      C 
			      C WriteConsoleA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WriteConsoleA	      C   WriteConsole equ <WriteConsoleA>
			      C ENDIF
			      C 
			      C WriteConsoleInputA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WriteConsoleInputA	      C   WriteConsoleInput equ <WriteConsoleInputA>
			      C ENDIF
			      C 
			      C WriteConsoleInputW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WriteConsoleOutputA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WriteConsoleOutputA	      C   WriteConsoleOutput equ <WriteConsoleOutputA>
			      C ENDIF
			      C 
			      C WriteConsoleOutputAttribute PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C WriteConsoleOutputCharacterA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WriteConsoleOutputCharac   C   WriteConsoleOutputCharacter equ <WriteConsoleOutputCharacterA>
   terA
			      C ENDIF
			      C 
			      C WriteConsoleOutputCharacterW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WriteConsoleOutputW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WriteConsoleW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WriteFile PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C WriteFileEx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C WriteFileGather PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C WritePrivateProfileSectionA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WritePrivateProfileSecti   C   WritePrivateProfileSection equ <WritePrivateProfileSectionA>
   onA
			      C ENDIF
			      C 
			      C WritePrivateProfileSectionW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WritePrivateProfileStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WritePrivateProfileStrin   C   WritePrivateProfileString equ <WritePrivateProfileStringA>
   gA
			      C ENDIF
			      C 
			      C WritePrivateProfileStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WritePrivateProfileStructA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WritePrivateProfileStruc   C   WritePrivateProfileStruct equ <WritePrivateProfileStructA>
   tA
			      C ENDIF
			      C 
			      C WritePrivateProfileStructW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WriteProcessMemory PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C WriteProfileSectionA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WriteProfileSectionA	      C   WriteProfileSection equ <WriteProfileSectionA>
			      C ENDIF
			      C 
			      C WriteProfileSectionW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WriteProfileStringA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = WriteProfileStringA	      C   WriteProfileString equ <WriteProfileStringA>
			      C ENDIF
			      C 
			      C WriteProfileStringW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C WriteTapemark PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C ZombifyActCtx PROTO STDCALL :DWORD
			      C _hread PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C _hwrite PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C _lclose PROTO STDCALL :DWORD
			      C _lcreat PROTO STDCALL :DWORD,:DWORD
			      C _llseek PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C _lopen PROTO STDCALL :DWORD,:DWORD
			      C _lread PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C _lwrite PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C lstrcatA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = lstrcatA		      C   lstrcat equ <lstrcatA>
			      C ENDIF
			      C 
			      C lstrcatW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C lstrcmpA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = lstrcmpA		      C   lstrcmp equ <lstrcmpA>
			      C ENDIF
			      C 
			      C lstrcmpW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C lstrcmpiA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = lstrcmpiA		      C   lstrcmpi equ <lstrcmpiA>
			      C ENDIF
			      C 
			      C lstrcmpiW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C lstrcpyA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = lstrcpyA		      C   lstrcpy equ <lstrcpyA>
			      C ENDIF
			      C 
			      C lstrcpyW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C lstrcpynA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = lstrcpynA		      C   lstrcpyn equ <lstrcpynA>
			      C ENDIF
			      C 
			      C lstrcpynW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C 
			      C lstrlenA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = lstrlenA		      C   lstrlen equ <lstrlenA>
			      C ENDIF
			      C 
			      C lstrlenW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C ELSE
			      C ENDIF
			      C 
				includelib <\masm32\lib\kernel32.lib>
				;=========================================
 00000000			.data
 00000000 00			x db 0
 00000001 00			y db ?
 00000002 00			myerr db 0
				;=========================================
 00000000			.code
 00000000			main:
 00000000  80 3D 00000000 R	cmp x, 40 ; х<=40 ?
	   28
 00000007  77 11		ja int2 ; если x>40 перейти к метке int2
				; вычисление -43+6x
 00000009  B3 06		mov bl, 6
 0000000B  A0 00000000 R	mov al, x 
 00000010  F6 E3		mul bl ; al:=ax*bl=6X
 00000012  B3 2B		mov bl, 43
 00000014  2A C3		sub al, bl; al:=-43 + 6x
 00000016  72 28		jc osh ; если есть перенос - ошибка, перейти к метке osh
 00000018  EB 2F		jmp fin ; перейти к метке fin
				;=========================================
 0000001A			int2:
 0000001A  80 3D 00000000 R	cmp x, 150 ; х<150 ?
	   96
 00000021  77 14		ja int3 ; если x>150 перейти к метке int3
				; вычисление 10-200/X
 00000023  B0 C8		mov al, 200
 00000025  8A 1D 00000000 R	mov bl, x
 0000002B  F6 F3		div bl; al:=200/X
 0000002D  8A D8		mov bl, al 
 0000002F  B0 0A		mov al, 10
 00000031  2A C3		sub al, bl; al:=10-200/X
 00000033  72 0B		jc osh ; если есть перенос - ошибка, перейти к метке osh
 00000035  EB 12		jmp fin ; перейти к метке fin
				; вычисление X+99
 00000037			int3:
 00000037  A0 00000000 R	mov al, x
 0000003C  04 63		add al, 99 ; al:=X+99
 0000003E  73 09		jnc fin ; если флаг переноса не установлен перейти к fin
 00000040  C6 05 00000002 R	osh: mov myerr, 1 ; установить код ошибки
	   01
 00000047  EB 05		jmp exit ; перейти к метке exit
				;=========================================
 00000049  A2 00000001 R	fin: mov y, al ; сформировать результат в переменной y
 0000004E  A0 00000002 R	exit: mov al, myerr ; код завершения программы
				invoke ExitProcess, al
				end main
