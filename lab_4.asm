;Лабораторная работа №4
;Выполнил ст. гр. УИС-311 Баклашкина А.А.
;Вариант 12
;Дан двумерный массив А(4х5).
;Сформировать одномерный массив B(4),каждый элемент которого
;Является суммой всех элементов строки, которые больше своего левого соседа
;==================================================
.486
.model flat, stdcall
option casemap: none
.stack 100h
;=========================================
include <\masm32\include\kernel32.inc>
includelib <\masm32\lib\kernel32.lib>
;=========================================
.data
N equ 4 ;количество строк
M equ 5 ;количество столбцов
A db 1,2,-3,-4,5
db -6,7,-8,9,0
db -1,3,2,-7,4
db 6,-8,2,0,1
B dw 4 dup (?)
;==================================================
.code
main:
;для адресации элементов массива A используем регистры
; EBX - смещение 1-го элемента текущей строки (0, 5, 10, 15)
; ESI - смещение элемента внутри текущей строки (0, 1, 2, 3, 4)
;для адресации элементов массива B используем регистр
; EDI - смещение элемента
mov ecx,N 			;счетчик строк массива A
					;(для организации цикла по строкам)
mov ebx,0 			;смещение первой строки массива A
mov edi,0 			;смещение первого элемента массива B
;-----------------
stroka: 	;начало цикла по строкам А (внешний цикл)
mov B[edi],0 			;обнуляем текущий элемент массива B
					;(подготовка для накопления суммы)
mov edx,ecx			;спасаем ecx: теперь он понадобится
					;для организации цикла по столбцам
mov esi,1 			;смещение первого элемента в строке массива A
mov ecx,M-1 			;счетчик столбцов массива A
					;(для организации цикла по столбцам)
;-----------------
next:				;начало цикла по столбцам (внутренний цикл)
mov al,A[ebx][esi] 		;поместить в AL текущий эл-т массива А
cbw 					;преобразование AL в слово AX 
cmp A[ebx][esi-1],al
jl plus
add esi,type A 	;установить si на следующий эл-т в строке(+1)
loop next 	;продолжить, если выбраны не все эл-ты строки
jmp save
plus:
add B[edi],ax 	;добавить к сумме очередной эл-т строки массива A
add esi,type A 	;установить si на следующий эл-т в строке(+1)
loop next 	;продолжить, если выбраны не все эл-ты строки
jmp save
;-----------------
save:
mov ecx,edx			;восстановим cx
add ebx,M*type A		;установить bx на начало
					;следующей строки массива A(+5)
add edi,type B 		;установить di на следующий
					;элемент массива B(+2)
loop stroka			;продолжить, если проверены не все строки
;-----------------
invoke ExitProcess, 0	;завершение программы
end main
